name: Jekyll CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Node.js Dependencies
        run: npm install --legacy-peer-deps

      - name: Create assets/js directory (if it doesn't exist)
        run: mkdir -p assets/js
        
      - name: Build JavaScript Assets
        run: npm run build:js
      
      - name: Verify main.min.js creation
        run: |
          ls -l assets/js/main.min.js
          cat assets/js/main.min.js | head -n 10
          file assets/js/main.min.js

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Build Jekyll Site
        run: |
          bundle exec jekyll build --trace # This should create _site
        env:
          JEKYLL_ENV: production

      # START: NEW DEBUGGING STEPS HERE
      - name: List contents after Jekyll build
        run: |
          echo "Listing contents of current directory:"
          ls -la
          echo "Listing contents of _site directory:"
          ls -la _site || echo "_site directory not found or empty."
      # END: NEW DEBUGGING STEPS

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site # This path must point to where _site is created

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4